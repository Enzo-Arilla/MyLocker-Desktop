<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAd5JREFUaEPtmOFNxDAMhW8ERmAERmAERmAD2AA2gA1gA0ZgBEZgBEYAfz8qmXfh
        mmvtNEX5pCfdVWrtV9tJ7g6DwWBQy4XpxnRvenTi2pWpa0iexN9N3zP6ND2ZLk1dcWf6MpWSntODiZew
        KSRQU4E5UaHNqkNgEiglhjk/E+jadKr1qGjz+fnLBEmS8Bzc/2rS+5ubeTNpErztcyFpfSF8bzIztyYf
        GHFtKaXqsqKlo0GXVEKhMv6ZqKZFF6PVoMWiYHHIevYRHyYfLHLJZC78XsTnlFkhaW+CFSqaZ5OPwfId
        Dj3rg9AK0WgMjIXDUPsgGcNIK/kYL6ZwdBizVhUfI6N9j4xk7cA+RooRba2UQTR8jBQjuodEbIRKk2Fv
        sfxq1dccfU6ix5PoDUufH7nh/kIHPvJwp62bMh8TeoxAEctw6QSc1lYTWhUSWNMCvBw9w/HMdAisb2+p
        Ge5REyhtNhQCaYsh/hGphdYpPYNrTX/uEqyUCNXhjMTs+FWNz9yDWa2oqrkZKjOXVI1IXF/KJmZK/4jU
        imWWZ5Qq3NwMnGsIA7p0d2MGmAUOlJyT+N1NwojPXGPI/ewoXZlZyzDTK8NMrwwzvfKvzezWCExmdm1i
        AgO7NzEYDFZzOPwAWUVshC/5psIAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>